
server.port=20080

###################DB 129.28.167.200#################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# spring.datasource.url=jdbc:mysql://129.28.167.200:3306/crud
spring.datasource.url=jdbc:mysql://120.55.81.129:3306/crud
# spring.datasource.url=jdbc:mysql://localhost:3306/crud
spring.datasource.username=root
spring.datasource.password=Root12_root
# spring.datasource.password=lc012269
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##########################  druid配置   ##########################
# 服务器Url http://120.55.81.129:20080/druid/index.html
# 可视化界面匹配路径，默认druid
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 最大线程数
spring.datasource.druid.max-active=10
# 初始化线程数
spring.datasource.druid.initial-size=1
# 是否开启可视化界面
spring.datasource.druid.stat-view-servlet.enabled=true
# 是否启用stat-filter
spring.datasource.druid.web-stat-filter.enabled=true
# 是否启用sql防火墙
spring.datasource.druid.filter.wall.enabled=true
# 只有配置了这个才能使用sql监控
spring.datasource.druid.filters=wall,stat,slf4j,conig
# 切面拦截的类包配置
spring.datasource.druid.aop-patterns=com.lc.controller.*
 #dao和实体位置
mybatis.project =src/main/java
#mapper位置
mybatis.resources=src/main/resources
mybatis.type-aliases-package=com.lc.model.entity
mybatis.mapper-locations=classpath*:mapper/**/*.xml

#https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter/

#logging.config=classpath:logback.xml
#logging.config=classpath:log4j2.xml
# 配置日志输出
#spring.datasource.druid.filter.slf4j.enabled=true
#spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
#spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
#spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
#spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
cache.switch=on

# redisson配置
redisson.address=129.28.167.200:6379
# swagger
#是否激活 swagger true or false
swagger.enable=true